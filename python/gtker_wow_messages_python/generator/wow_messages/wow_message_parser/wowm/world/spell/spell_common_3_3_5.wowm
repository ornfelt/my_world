flag CastFlags : u32 {
    NONE               = 0x00000000;
    /// aoe combat log?
    PENDING            = 0x00000001;
    HAS_TRAJECTORY     = 0x00000002;
    UNKNOWN_3          = 0x00000004;
    /// ignore AOE visual
    UNKNOWN_4          = 0x00000008;
    UNKNOWN_5          = 0x00000010;
    /// Projectiles visual
    AMMO               = 0x00000020;
    UNKNOWN_7          = 0x00000040;
    UNKNOWN_8          = 0x00000080;
    UNKNOWN_9          = 0x00000100;
    UNKNOWN_10         = 0x00000200;
    UNKNOWN_11         = 0x00000400;
    POWER_LEFT_SELF    = 0x00000800;
    UNKNOWN_13         = 0x00001000;
    UNKNOWN_14         = 0x00002000;
    UNKNOWN_15         = 0x00004000;
    UNKNOWN_16         = 0x00008000;
    UNKNOWN_17         = 0x00010000;
    ADJUST_MISSILE     = 0x00020000;
    /// no GCD for spell casts from charm/summon (vehicle spells is an example)
    NO_GCD             = 0x00040000;
    VISUAL_CHAIN       = 0x00080000;
    UNKNOWN_21         = 0x00100000;
    RUNE_LIST          = 0x00200000;
    UNKNOWN_23         = 0x00400000;
    UNKNOWN_24         = 0x00800000;
    UNKNOWN_25         = 0x01000000;
    UNKNOWN_26         = 0x02000000;
    IMMUNITY           = 0x04000000;
    UNKNOWN_28         = 0x08000000;
    UNKNOWN_29         = 0x10000000;
    UNKNOWN_30         = 0x20000000;
    /// Unused on TC 3.3.5a. Defined from TC Master.
    HEAL_PREDICTION    = 0x40000000;
    UNKNOWN_32         = 0x80000000;
} {
    versions = "3.3.5";
}

struct SpellMiss {
    Guid target;
    SpellMissInfo miss_info;
    if (miss_info == REFLECT) {
        u8 reflect_result;
    }
} {
    versions = "2 3";
}

flag GameobjectCastFlags : u32 {
    /// also do not send standstate update
    LOCK_PLAYER_CAST_ANIM	= 0x01;
    UNKNOWN2 = 0x02;
    UNKNOWN4 = 0x04;
    UNKNOWN8 = 0x08;
    UNKNOWN16 = 0x10;
    /// 2 functions are called on 2 values
    AMMO           = 0x20;
    DEST_LOCATION = 0x040;
    ITEM_CASTER      = 0x100;
    UNK200			= 0x200;
    /// TARGET MISSES AND OTHER MESSAGES LIKE 'Resist'
    EXTRA_MESSAGE    = 0x400;
    /// seems to work hand in hand with some visual effect of update actually
    POWER_UPDATE		= 0x800;
    UNK2000			= 0x2000;
    /// no idea
    UNK1000			= 0x1000;
    /// seems to make server send extra 2 bytes before UNK1 and after UNK20000
    UNK8000			= 0x8000;
    /// seems to make server send an uint32 after `m_targets.write`
    ADJUST_MISSILE			= 0x20000;
    /// 1 uint32. this is not confirmed but i have a feeling about it :D
    UNK40000			= 0x40000;
    /// 2 functions called (same ones as for ranged but different)
    VISUAL_CHAIN = 0x80000;
    /// 2 bytes for the rune cur and rune next flags
    RUNE_UPDATE		= 0x200000;
    /// seems to make server send an uint32 after `m_targets.write`
    UNK400000		= 0x400000;
} {
    versions = "3.3.5";
}